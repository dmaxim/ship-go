name: CI Checks

on:
  push:
    branches: [ main ]
    paths:
      - hello-api/**
      - .github/workflows/**

jobs:
  test:
    name: Test Application
    runs-on: ubuntu-latest
    env:
      working-directory: ./hello-api
    steps:

    - name: Checkout out code into the Go module directory
      uses: actions/checkout@v4

    - name: Setup Go 1.x
      uses: actions/setup-go@v4
      with:
        go-version: ^1.21
        cache: false

    - name: Run Tests
      run: make test
      working-directory: ${{ env.working-directory }}

    - name: Coverage Check
      run: make coverage
      working-directory: ${{ env.working-directory }}

    - name: Generate Report
      run: make report
      working-directory: ${{ env.working-directory }}

    - name: Copy Files
      run: |
        mkdir reports
        cp cover.html reports/.
      working-directory: ${{ env.working-directory }}

    - name: Archive
      uses: actions/upload-artifact@v3
      with:
        name: reports
        path: ${{ env.working-directory }}/reports

  build:
    name: Build App
    runs-on: ubuntu-latest
    needs: test
    env:
      working-directory: ./hello-api
    steps:
    - name: Checkout out code into the Go module directory
      uses: actions/checkout@v4

    - name: Set up Go 1.x
      uses: actions/setup-go@v4
      with:
        go-version: ^1.21
        cache: false

    - name: Build
      run: make build
      working-directory: ${{ env.working-directory }}

    - name: Copy Files
      run: |
        mkdir artifacts
        cp api artifacts/.
      working-directory: ${{ env.working-directory }}

    - name: Archive
      uses: actions/upload-artifact@v3
      with:
        name: api
        path: ${{ env.working-directory }}/artifacts
  
  deliver:
    name: Release
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - name: Checkout out code into the Go module directory
      uses: actions/checkout@v4
    
    - name: Download binary
      uses: actions/download-artifact@v3
      with:
        name: api
    
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} #Token auto-generated by GitHub Actions
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        bod: |
          In process test
        draft: true
        prerelease: true
    - name: Upload Release binary
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        asset_path: api
        asset_name: api
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_content_type: application/octet-stream
  
  deploy-function:
    name: Deploy Faas
    runs-on: ubuntu-latest
    needs: test
    env:
      working-directory: ./hello-api
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    steps:
      - name: Checkout out code into the Go module directory
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Auth for deploy
        id: auth
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }} 
      - name: Deploy Function
        id: deploy
        uses: google-github-actions/deploy-cloud-functions@v2
        with:
          workload_identity_provider: 'projects/mx-sec584/locations/global/workloadIdentityPools/mx-sec584-wip'
          service_account: 'hello-api@mx-sec584.iam.gserviceaccount.com'
          name: translate
          entry_point: Translate
          runtime: go121
          source_dir: ${{env.working-directory}}
      - name: Test
        run: curl "${{ steps.deploy.outputs.url}}"
